buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.intermine', name: 'plugin', version: System.getProperty("imVersion")
    }
}

ext {
    // set here to make available to individual bio-sources
    bioVersion = System.getProperty("bioVersion")
    imVersion = System.getProperty("imVersion")
}

subprojects {
    group = 'org.intermine'
    version = '4.3.0'

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'dbmodel'
    apply plugin: 'biosource-dbmodel'
    apply plugin: "checkstyle"

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenLocal()
        mavenCentral()
    }

    configurations {
        bioModel
        mergeModel
    }

    dependencies {
        compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
        compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
        compile group: 'org.intermine', name: 'bio-core', version: bioVersion
        compile group : "org.intermine", name: "intermine-resources", version: imVersion // log4j
        compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
        testCompile group: 'junit', name: 'junit', version: '4.8.2'
        testCompile group: "org.intermine", name: "intermine-integrate", version: imVersion, classifier: "testClasses"
        testCompile group: 'xmlunit', name: 'xmlunit', version: '1.0'
        mergeModel group : "org.intermine", name: "intermine-objectstore", version: imVersion
        bioModel group: 'org.intermine', name: 'bio-model', version: bioVersion, transitive: false
    }

    dbModelConfig {
        objectStoreName = "os.bio-test"
        modelName = "genomic"
        defaultInterminePropertiesFile = "default.intermine.bio-test.properties"
    }

    task copyMineProperties() {
        dependsOn 'processResources'
        doLast {
            copy {
                from "${System.env.HOME}/.intermine/intermine-bio-test.properties"
                into sourceSets.main.output.resourcesDir
                rename { fileName -> fileName.replace('intermine-bio-test.properties', 'intermine.properties') }
            }
        }
    }

    jar {
        exclude "intermine.properties"
    }

    checkstyle {
        toolVersion '7.8.1'
        configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
        sourceSets = [sourceSets.main]
        showViolations = true
        ignoreFailures = false
        maxWarnings = 0
        //reportsDir = file("$project.rootDir/reports/checkstyle/$project.name")
        configProperties = [
                'checkstyle.header.file': "${rootDir}/config/checkstyle/copyright_header.txt",
                'suppressionFile': "${rootDir}/config/checkstyle/suppressions.xml"
        ]
    }

    checkstyleMain {
        source = fileTree('src/main') {
            includes = ['**/*.java']
            excludes = ['build/**']
        }
    }

    checkstyleTest {
        enabled = false
    }

    tasks.withType(Test) {
        scanForTestClasses = false
        include '**/*Test.class'
    }

    test {
        ignoreFailures = false
        forkEvery = 1
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }


    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}

task testReport(type: TestReport) {
    destinationDir = file("$buildDir/reports/allTests")
    // Include the results from the `test` task in all subprojects
    reportOn subprojects*.test
}

